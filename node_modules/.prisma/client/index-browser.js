
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 2.30.3
 * Query Engine version: b8c35d44de987a9691890b3ddf3e2e7effb9bf20
 */
Prisma.prismaVersion = {
  client: "2.30.3",
  engine: "b8c35d44de987a9691890b3ddf3e2e7effb9bf20"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */

Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.CountryScalarFieldEnum = makeEnum({
  ct_id: 'ct_id',
  country: 'country'
});

exports.Prisma.HistoryScalarFieldEnum = makeEnum({
  h_id: 'h_id',
  h_date: 'h_date',
  wish: 'wish',
  p_id: 'p_id',
  kt_id: 'kt_id',
  user_id: 'user_id'
});

exports.Prisma.KrathongScalarFieldEnum = makeEnum({
  kt_id: 'kt_id',
  kt_name: 'kt_name',
  amount: 'amount',
  kt_image: 'kt_image',
  detail: 'detail',
  t_id: 't_id'
});

exports.Prisma.Kt_typeScalarFieldEnum = makeEnum({
  t_id: 't_id',
  type_name: 'type_name'
});

exports.Prisma.PersonScalarFieldEnum = makeEnum({
  user_id: 'user_id',
  fname: 'fname',
  lname: 'lname',
  username: 'username',
  password: 'password',
  email: 'email',
  id_card: 'id_card',
  phone: 'phone',
  role_id: 'role_id',
  ct_id: 'ct_id'
});

exports.Prisma.Person_roleScalarFieldEnum = makeEnum({
  role_id: 'role_id',
  role_name: 'role_name'
});

exports.Prisma.PlaceScalarFieldEnum = makeEnum({
  p_id: 'p_id',
  p_name: 'p_name',
  p_image: 'p_image',
  tp_id: 'tp_id'
});

exports.Prisma.Place_typeScalarFieldEnum = makeEnum({
  tp_id: 'tp_id',
  tp_name: 'tp_name'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});


exports.Prisma.ModelName = makeEnum({
  country: 'country',
  history: 'history',
  krathong: 'krathong',
  kt_type: 'kt_type',
  person: 'person',
  person_role: 'person_role',
  place: 'place',
  place_type: 'place_type'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
